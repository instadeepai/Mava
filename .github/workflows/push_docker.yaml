name: push-docker-container

on:
  push:
    branches: [develop]
  pull_request:
    types: [ labeled ]


jobs:
  # Action pushes new docker image if we merge into dev
  build-push-develop:
    if:  ${{ github.ref == 'refs/heads/develop' }}
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set docker repo vars
        id: vars2
        run: echo "::set-output name=docker_repo::instadeepct/mava"

      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        name: Build and push jax-core
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:jax-core-latest
          target: jax-core

      -
        name: Build and push pz-jax
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:pz-jax-latest
          target: pz-jax

      -
        name: Build and push sc2-jax
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:sc2-jax-latest
          target: sc2-jax


      -
        name: Build and push flatland-jax
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:flatland-jax-latest
          target: flatland-jax

      -
        name: Build and push robocup-jax
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:robocup-jax-latest
          target: robocup-jax

      -
        name: Build and push openspiel-jax
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:openspiel-jax-latest
          target: openspiel-jax

      -
        name: Build and push meltingpot-jax
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:meltingpot-jax-latest
          target: meltingpot-jax

      -
        name: Build and push tf-core
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:tf-core-latest
          target: tf-core

      -
        name: Build and push pz
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:pz-latest
          target: pz

      -
        name: Build and push sc2
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:sc2-latest
          target: sc2


      -
        name: Build and push flatland
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:flatland-latest
          target: flatland

      -
        name: Build and push robocup
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:robocup-latest
          target: robocup

      -
        name: Build and push openspiel
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:openspiel-latest
          target: openspiel

      -
        name: Build and push meltingpot
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:meltingpot-latest
          target: meltingpot




  # Action pushes new docker image if we have a PR to dev and have the label benchmark
  build-push-branches:
    if:  ${{ github.event.label.name == 'benchmark' }}
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          # Check out pull request's HEAD commit
          # For more details, see:
          # https://github.com/actions/checkout/issues/299.
          ref: ${{ github.event.pull_request.head.sha }}

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Set sha vars
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Set docker repo vars
        id: vars2
        run: echo "::set-output name=docker_repo::instadeepct/mava"

      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        name: Build and push jax-core
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:jax-core-${{ steps.vars.outputs.sha_short }}
          target: jax-core

      -
        name: Build and push pz-jax
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:pz-jax-${{ steps.vars.outputs.sha_short }}
          target: pz-jax

      -
        name: Build and push sc2-jax
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:sc2-jax-${{ steps.vars.outputs.sha_short }}
          target: sc2-jax

      -
        name: Build and push flatland-jax
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:flatland-jax-${{ steps.vars.outputs.sha_short }}
          target: flatland-jax

      -
        name: Build and push robocup-jax
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:robocup-jax-${{ steps.vars.outputs.sha_short }}
          target: robocup-jax

      -
        name: Build and push openspiel-jax
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:openspiel-jax-${{ steps.vars.outputs.sha_short }}
          target: openspiel-jax

      -
        name: Build and push meltingpot
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:meltingpot-jax-${{ steps.vars.outputs.sha_short }}
          target: meltingpot-jax

      -
        name: Build and push tf-core
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:tf-core-${{ steps.vars.outputs.sha_short }}
          target: tf-core

      -
        name: Build and push pz
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:pz-${{ steps.vars.outputs.sha_short }}
          target: pz

      -
        name: Build and push sc2
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:sc2-${{ steps.vars.outputs.sha_short }}
          target: sc2

      -
        name: Build and push flatland
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:flatland-${{ steps.vars.outputs.sha_short }}
          target: flatland

      -
        name: Build and push robocup
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:robocup-${{ steps.vars.outputs.sha_short }}
          target: robocup

      -
        name: Build and push openspiel
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:openspiel-${{ steps.vars.outputs.sha_short }}
          target: openspiel

      -
        name: Build and push meltingpot
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.vars2.outputs.docker_repo }}:meltingpot-${{ steps.vars.outputs.sha_short }}
          target: meltingpot
